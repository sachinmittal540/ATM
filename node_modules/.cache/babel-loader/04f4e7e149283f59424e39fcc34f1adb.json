{"ast":null,"code":"var _jsxFileName = \"/Users/apple/sachin/atm/src/App.js\";\nimport React, { Component } from 'react';\nimport { Card, Tag, Input, Checkbox, Select, message, Table } from 'antd';\nimport 'antd/dist/antd.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Search\n} = Input;\nconst {\n  Option\n} = Select;\nconst {\n  Column\n} = Table;\nconst availableNotes = [1000, 500, 200, 100, 50, 20, 10];\nexport class App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      denomination: false,\n      denominationAmount: 0,\n      totalAmount: 100000,\n      dispatchAmount: 0,\n      dispatchedNotes: {}\n    };\n\n    this.onChange = e => {\n      this.setState({\n        denomination: e.target.checked,\n        denominationAmount: 0\n      });\n    };\n\n    this.handleChange = value => {\n      this.setState({\n        denominationAmount: parseInt(value)\n      });\n    };\n\n    this.onDispatch = value => {\n      const numericValue = parseInt(value);\n      const newValue = [];\n\n      if (numericValue < 10 || numericValue % 10 !== 0) {\n        message.error('Invalid Input, Please retry with a new amount');\n        return;\n      }\n\n      availableNotes.map(notes => {\n        if (numericValue <= notes) {\n          newValue.push({\n            [notes]: newValue[notes] + 1\n          });\n        }\n      });\n      this.setState({\n        dispatchAmount: numericValue\n      });\n    };\n\n    this.onDispatch = value => {\n      let numericValue = parseInt(value);\n      const newValue = [];\n\n      if (numericValue < 10 || numericValue % 10 !== 0) {\n        message.error('Invalid Input, Please retry with a new amount');\n        return;\n      }\n\n      for (let i = 0; i < availableNotes.length; i++) {\n        if (numericValue >= availableNotes[i]) {\n          const notes = {};\n\n          while (numericValue >= 10 && numericValue >= availableNotes[i]) {\n            if (newValue.length > 0 && newValue[newValue.length - 1].denomination === availableNotes[i]) {\n              newValue[newValue.length - 1].numberOfNotes += 1;\n            } else {\n              notes.denomination = availableNotes[i];\n              notes.numberOfNotes = 1;\n              newValue.push(notes);\n            }\n\n            numericValue -= availableNotes[i];\n          }\n        }\n      }\n\n      console.log(newValue);\n      return newValue;\n    };\n  }\n\n  render() {\n    const {\n      denomination,\n      totalAmount,\n      dispatchAmount,\n      dispatchedNotes\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(Card, {\n      title: \"ATM Machine\",\n      type: \"inner\",\n      style: {\n        width: 350,\n        textAlign: \"center\",\n        margin: \"20px auto\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: [\"Total Amount: \", totalAmount - dispatchAmount]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Available Notes :\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tag, {\n        color: \"magenta\",\n        children: \"10\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tag, {\n        color: \"red\",\n        children: \"20\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tag, {\n        color: \"cyan\",\n        children: \"50\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tag, {\n        color: \"blue\",\n        children: \"100\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tag, {\n        color: \"green\",\n        children: \"200\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tag, {\n        color: \"lime\",\n        children: \"500\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Tag, {\n        color: \"purple\",\n        children: \"1000\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Checkbox, {\n        onChange: this.onChange,\n        style: {\n          margin: \"50px 0\"\n        },\n        children: \"Denomination\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Select, {\n        style: {\n          width: 80\n        },\n        onChange: this.handleChange,\n        size: \"small\",\n        disabled: !denomination,\n        children: [/*#__PURE__*/_jsxDEV(Option, {\n          value: \"10\",\n          children: \"10\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Option, {\n          value: \"20\",\n          children: \"20\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Option, {\n          value: \"50\",\n          children: \"50\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Option, {\n          value: \"100\",\n          children: \"100\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Option, {\n          value: \"200\",\n          children: \"200\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Option, {\n          value: \"500\",\n          children: \"500\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Option, {\n          value: \"1000\",\n          children: \"1000\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Search, {\n        type: \"number\",\n        placeholder: \"Amount\",\n        allowClear: true,\n        enterButton: \"Dispatch\",\n        size: \"small\",\n        onSearch: this.onDispatch\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), dispatchedNotes.length > 0 && /*#__PURE__*/_jsxDEV(Table, {\n        children: [/*#__PURE__*/_jsxDEV(Column, {\n          title: \"Denomination\",\n          dataIndex: \"denomination\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Column, {\n          title: \"Number of notes\",\n          dataIndex: \"numberOfNotes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this);\n  }\n\n}\nexport default App;","map":{"version":3,"sources":["/Users/apple/sachin/atm/src/App.js"],"names":["React","Component","Card","Tag","Input","Checkbox","Select","message","Table","Search","Option","Column","availableNotes","App","state","denomination","denominationAmount","totalAmount","dispatchAmount","dispatchedNotes","onChange","e","setState","target","checked","handleChange","value","parseInt","onDispatch","numericValue","newValue","error","map","notes","push","i","length","numberOfNotes","console","log","render","width","textAlign","margin"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Card, Tag, Input, Checkbox, Select, message, Table } from 'antd';\nimport 'antd/dist/antd.css';\n\nconst { Search } = Input;\nconst { Option } = Select;\nconst { Column } = Table;\n\nconst availableNotes = [1000, 500, 200, 100, 50, 20, 10];\n\nexport class App extends Component {\n  state = {\n    denomination: false,\n    denominationAmount: 0,\n    totalAmount: 100000,\n    dispatchAmount: 0,\n    dispatchedNotes: {}\n  }\n\n  onChange = (e) => {\n    this.setState({denomination: e.target.checked, denominationAmount: 0});\n  }\n\n  handleChange = (value) => {\n    this.setState({denominationAmount: parseInt(value)});\n  }\n\n  onDispatch = (value) => {\n    const numericValue = parseInt(value);\n    const newValue = [];\n    if (numericValue < 10 || numericValue % 10 !== 0) {\n      message.error('Invalid Input, Please retry with a new amount');\n      return;\n    }\n\n    availableNotes.map(notes => {\n      if(numericValue <= notes) {\n        newValue.push({[notes] : newValue[notes]+1})\n      }\n    })\n    this.setState({dispatchAmount: numericValue});\n  }\n\n  onDispatch = (value) => {\n    let numericValue = parseInt(value);\n    const newValue = [];\n    if (numericValue < 10 || numericValue % 10 !== 0) {\n      message.error('Invalid Input, Please retry with a new amount');\n      return;\n    }\n    \n    for(let i=0; i<availableNotes.length; i++) {\n      if(numericValue >= availableNotes[i]) {\n        const notes = {};\n        while(numericValue >=10 && numericValue >= availableNotes[i]) {\n          if(newValue.length > 0 && newValue[newValue.length-1].denomination === availableNotes[i]) {\n            newValue[newValue.length-1].numberOfNotes += 1;\n          } else {\n            notes.denomination = availableNotes[i];\n            notes.numberOfNotes = 1;\n            newValue.push(notes);\n          }\n          numericValue -= availableNotes[i];    \n        }   \n      }\n    }\n    console.log(newValue);\n    return newValue;\n  }\n\n  render() {\n    const {denomination, totalAmount, dispatchAmount, dispatchedNotes} = this.state;\n    return (\n      <Card title=\"ATM Machine\" type=\"inner\" style={{ width: 350, textAlign: \"center\", margin: \"20px auto\" }}>\n\n        <h4>Total Amount: {totalAmount-dispatchAmount}</h4>\n\n        <p>Available Notes :</p>\n        <Tag color=\"magenta\">10</Tag>\n        <Tag color=\"red\">20</Tag>\n        <Tag color=\"cyan\">50</Tag>\n        <br />\n        <Tag color=\"blue\">100</Tag>\n        <Tag color=\"green\">200</Tag>\n        <Tag color=\"lime\">500</Tag>\n        <Tag color=\"purple\">1000</Tag>\n\n        <Checkbox onChange={this.onChange} style={{margin: \"50px 0\"}}>Denomination</Checkbox>\n        <Select style={{ width: 80 }} onChange={this.handleChange} size=\"small\" disabled={!denomination}>\n          <Option value=\"10\">10</Option>\n          <Option value=\"20\">20</Option>\n          <Option value=\"50\">50</Option>\n          <Option value=\"100\">100</Option>\n          <Option value=\"200\">200</Option>\n          <Option value=\"500\">500</Option>\n          <Option value=\"1000\">1000</Option>\n        </Select>\n\n        <Search type=\"number\" placeholder=\"Amount\" allowClear enterButton=\"Dispatch\" size=\"small\" onSearch={this.onDispatch} />\n\n        {\n          dispatchedNotes.length > 0 &&\n          <Table >\n            <Column title=\"Denomination\" dataIndex=\"denomination\" />\n            <Column title=\"Number of notes\" dataIndex=\"numberOfNotes\" />\n          </Table>\n        }\n      </Card>\n    )\n  }\n}\n\nexport default App\n\n"]},"metadata":{},"sourceType":"module"}